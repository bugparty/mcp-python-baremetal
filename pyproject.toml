[project]
name = "mcp-python-baremetal"
version = "0.1.0"
description = "A baremetal Python execution MCP server supporting HTTP/SSE and CLI interfaces"
authors = [
    {name = "BugParty", email = "bugparty@example.com"},
]
dependencies = [
    "mcp>=1.0.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "sse-starlette>=1.6.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "sympy>=1.12.0",
    "jax[cpu]>=0.4.0",
    "torch>=2.0.0,<3.0.0",  # CPU version
    "torchvision>=0.15.0,<1.0.0",
    "numba>=0.58.0",
    "cvxpy>=1.4.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    # Note: SageMath is typically installed system-wide, not via pip
    # Users should install it separately if needed
]
readme = "README.md"
requires-python = ">= 3.8"

[project.scripts]
mcp-python-baremetal = "mcp_python_baremetal.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
test = [
    "pytest>=7.0.0", 
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py38"
exclude = [
    "examples/",  # Examples intentionally use undefined names for auto-import demo
]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["mcp_python_baremetal"]
omit = [
    "tests/*",
    "examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]